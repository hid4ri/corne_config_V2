/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vmute {
            bindings = <&kp C_MUTE>;
            key-positions = <23 35>;
            layers = <4>;
        };

        play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <22 34>;
            layers = <4>;
        };
    };

    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <280>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 12 24 25 13 1 2 14 26 27 15 3 4 16 17 5 29 28 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <280>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "qwerty";
            bindings = <
&kp DELETE                          &kp Q            &kp W  &kp E     &kp R      &kp T        &kp Y    &kp U         &kp I      &kp O    &kp P                &kp BSPC
&kp LEFT_SHIFT                      &kp A            &kp S  &kp D     &kp F      &kp G        &kp H    &kp J         &kp K      &kp L    &kp SEMI             &kp RIGHT_SHIFT
&HML LEFT_CONTROL NON_US_BACKSLASH  &HML LEFT_ALT Z  &kp X  &kp C     &kp V      &kp B        &kp N    &kp M         &kp COMMA  &kp DOT  &HMR RIGHT_ALT FSLH  &kp RIGHT_CONTROL
                                                            &kp LGUI  &lt 3 TAB  &kp SPACE    &kp RET  &lt 4 ESCAPE  &kp RGUI
            >;
        };

        Colemak_Layer {
            display-name = "colemak";
            bindings = <
&kp DELETE                          &kp Q            &kp W  &kp F     &kp P      &kp G        &kp J    &kp L         &kp U      &kp Y    &kp SEMICOLON     &kp BSPC
&kp LEFT_SHIFT                      &HMR LEFT_ALT A  &kp R  &kp S     &kp T      &kp D        &kp H    &kp N         &kp E      &kp I    &HMR RIGHT_ALT O  &kp RIGHT_SHIFT
&HML LEFT_CONTROL NON_US_BACKSLASH  &kp Z            &kp X  &kp C     &kp V      &kp B        &kp K    &kp M         &kp COMMA  &kp DOT  &kp FSLH          &kp RIGHT_CONTROL
                                                            &kp LGUI  &lt 3 TAB  &kp SPACE    &kp RET  &lt 4 ESCAPE  &kp RGUI
            >;
        };

        Gaming_Layer {
            display-name = "Gaming";
            bindings = <
&kp BACKSPACE                       &kp Y  &kp U      &kp I       &kp P      &kp ESCAPE       &kp I             &kp Q      &kp W           &kp E  &kp T  &kp TAB
&kp DELETE                          &kp H  &kp J      &kp K       &kp L      &kp SEMICOLON    &kp M             &kp A      &kp S           &kp D  &kp F  &kp G
&HML LEFT_CONTROL NON_US_BACKSLASH  &kp R  &kp COMMA  &kp PERIOD  &kp SLASH  &kp B            &kp N             &kp Z      &kp X           &kp C  &kp V  &kp SPACE
                                                      &kp LGUI    &lt 3 TAB  &kp ENTER        &kp LEFT_CONTROL  &kp LSHFT  &lt 4 LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbols";
            bindings = <
&kp LEFT_ALT      &kp EXCL             &kp CARET                &kp GRAVE            &kp DLLR                        &kp POUND                    &kp AMPS        &kp PERCENT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS             &kp BSPC
&kp LEFT_SHIFT    &HML EXCL NUMBER_1   &HML AT NUMBER_2         &HML HASH NUMBER_3   &HML DOLLAR NUMBER_4            &HML PERCENT N5              &kp APOSTROPHE  &kp AT       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL             &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &HML CARET NUMBER_6  &HML AMPERSAND NUMBER_7  &HML ASTRK NUMBER_8  &HML LEFT_PARENTHESIS NUMBER_9  &HML RIGHT_PARENTHESIS N0    &kp ASTRK       &kp NUHS     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH  &kp RIGHT_CONTROL
                                                                &kp LGUI             &trans                          &kp SPACE                    &kp RET         &trans       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Navi";
            bindings = <
&kp ESCAPE        &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &kp RIGHT_CONTROL  &kp CAPSLOCK   &kp INS      &kp C_BRI_DN  &kp C_BRI_UP  &kp RIGHT_SHIFT
&kp LEFT_SHIFT    &kp LG(NUMBER_6)  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &kp LG(NUMBER_0)    &kp LEFT           &kp DOWN       &kp UP       &kp RIGHT     &kp C_NEXT    &kp C_VOLUME_UP
&kp LEFT_CONTROL  &to 0             &to 1             &to 2             &trans            &trans              &kp HOME           &kp PAGE_DOWN  &kp PAGE_UP  &kp END       &kp C_PREV    &kp C_VOLUME_DOWN
                                                      &kp LGUI          &trans            &kp LEFT_ALT        &trans             &trans         &trans
            >;
        };

        tri_layer {
            display-name = "Function";
            bindings = <
&kp LEFT_ALT      &kp STAR   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_DIVIDE        &kp F1   &kp F2   &kp F3    &kp F4   &bt BT_SEL 0  &bt BT_SEL 1
&kp LEFT_SHIFT    &kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS            &kp F5   &kp F6   &kp F7    &kp F8   &bt BT_SEL 2  &bt BT_SEL 3
&kp LEFT_CONTROL  &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &HML DOT NUMBER_0    &kp F9   &kp F10  &kp F11   &kp F12  &bt BT_SEL 4  &bt BT_CLR_ALL
                                           &kp LGUI      &trans        &kp SPACE            &kp RET  &trans   &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };
};
