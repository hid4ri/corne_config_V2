/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vmute {
            bindings = <&kp C_MUTE>;
            key-positions = <9 8>;
            layers = <5>;
        };

        play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <6 7>;
            layers = <5>;
        };

        maxbright {
            bindings = <&kp C_BRIGHTNESS_MAXIMUM>;
            key-positions = <34 22>;
            layers = <5>;
        };
    };

    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <280>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 12 24 25 13 1 2 14 26 27 15 3 4 16 17 5 29 28 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <280>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <0>;
        };

        HMShiftR: HMShiftR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        HMShiftL: HMShiftL {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 6 7 8 9 18 19 20 21>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "qwerty";
            bindings = <
&kp ESCAPE            &kp Q                   &kp W                &kp E            &kp R            &kp T        &kp Y    &kp U             &kp I             &kp O                 &kp P                       &kp BACKSPACE
&trans                &HMShiftL LEFT_SHIFT A  &HML LEFT_CONTROL S  &HML LEFT_ALT D  &HML LEFT_GUI F  &kp G        &kp H    &HMR RIGHT_GUI J  &HMR RIGHT_ALT K  &HMR RIGHT_CONTROL L  &HMShiftR RIGHT_SHIFT SEMI  &trans
&kp NON_US_BACKSLASH  &kp Z                   &kp X                &kp C            &kp V            &kp B        &kp N    &kp M             &kp COMMA         &kp DOT               &kp FSLH                    &trans
                                                                   &kp ESCAPE       &lt 4 TAB        &kp SPACE    &kp RET  &lt 5 DELETE      &kp BACKSPACE
            >;
        };

        Colemak-dh_Layer {
            display-name = "colemak-dh";
            bindings = <
&kp ESCAPE  &kp Q              &kp W                &kp F            &kp P            &kp B        &kp J    &kp L             &kp U             &kp Y                 &kp SEMICOLON       &trans
&trans      &HML LEFT_SHIFT A  &HML LEFT_CONTROL R  &HML LEFT_ALT S  &HML LEFT_GUI T  &kp G        &kp M    &HMR RIGHT_GUI N  &HMR RIGHT_ALT E  &HMR RIGHT_CONTROL I  &HMR RIGHT_SHIFT O  &trans
&kp NUBS    &kp Z              &kp X                &kp C            &kp D            &kp V        &kp K    &kp H             &kp COMMA         &kp DOT               &kp FSLH            &HMR AT APOS
                                                    &kp ESCAPE       &lt 4 TAB        &kp SPACE    &kp RET  &lt 5 DELETE      &kp BACKSPACE
            >;
        };

        Gaming_Layer {
            display-name = "Gaming";
            bindings = <
&kp BACKSPACE                       &kp Y  &kp U      &kp O       &kp P      &kp ESCAPE       &kp T             &kp Q      &kp W           &kp E  &kp B  &kp TAB
&kp DELETE                          &kp H  &kp J      &kp K       &kp L      &kp SEMICOLON    &kp G             &kp A      &kp S           &kp D  &kp F  &kp R
&HML LEFT_CONTROL NON_US_BACKSLASH  &kp I  &kp COMMA  &kp PERIOD  &kp SLASH  &kp M            &kp N             &kp Z      &kp X           &kp C  &kp V  &kp SPACE
                                                      &kp LGUI    &lt 5 TAB  &kp ENTER        &kp LEFT_CONTROL  &kp LSHFT  &lt 3 LEFT_ALT
            >;
        };

        Gaming_Layer2 {
            bindings = <
&trans  &trans  &trans  &trans          &trans          &trans             &kp ESCAPE  &trans        &kp J         &kp I         &kp M         &kp TAB
&trans  &trans  &trans  &trans          &kp UP_ARROW    &trans             &trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5
&trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &trans      &kp NUMBER_6  &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
                        &trans          &trans          &kp SPACE          &kp RET     &trans        &trans
            >;

            label = "gaming2";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbols";
            bindings = <
&kp ESCAPE  &kp NUMBER_1                      &kp NUMBER_2             &kp NUMBER_3        &kp NUMBER_4        &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7                     &kp NUMBER_8                 &kp NUMBER_9                             &kp NUMBER_0            &kp BACKSPACE
&trans      &HML LEFT_SHIFT NON_US_BACKSLASH  &HML LEFT_CONTROL GRAVE  &HML LEFT_ALT PIPE  &HML LEFT_GUI NUHS  &kp AT          &HMR SQT AT   &HMR RIGHT_GUI MINUS             &HMR RIGHT_ALT EQUAL         &HMR RIGHT_CONTROL ASTERISK              &HMR RIGHT_SHIFT SLASH  &trans
&trans      &kp CAPS                          &trans                   &trans              &trans              &trans          &trans        &HMR RIGHT_BRACKET LEFT_BRACKET  &HMR RIGHT_BRACE LEFT_BRACE  &HMR RIGHT_PARENTHESIS LEFT_PARENTHESIS  &trans                  &trans
                                                                       &kp ESCAPE          &trans              &kp SPACE       &kp RET       &mo 6                            &kp BACKSPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Navi";
            bindings = <
&trans  &HML LG(LS(NUMBER_1)) LG(NUMBER_1)  &HML LG(LS(NUMBER_2)) LG(NUMBER_2)  &HML LG(LS(NUMBER_3)) LG(NUMBER_3)  &HML LG(LS(NUMBER_4)) LG(NUMBER_4)  &HML LG(LS(NUMBER_5)) LG(NUMBER_5)    &kp C_PREV  &kp C_NEXT     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LEFT_CONTROL  &trans
&trans  &HML LG(LS(NUMBER_6)) LG(NUMBER_6)  &HML LG(LS(NUMBER_7)) LG(NUMBER_7)  &HML LG(LS(NUMBER_8)) LG(NUMBER_8)  &HML LG(LS(NUMBER_9)) LG(NUMBER_9)  &HML LG(LS(NUMBER_0)) LG(NUMBER_0)    &kp LEFT    &kp DOWN       &kp UP             &kp RIGHT        &kp C_BRI_UP      &trans
&trans  &to 0                               &to 1                               &to 2                               &trans                              &trans                                &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP        &kp END          &kp C_BRI_DN      &trans
                                                                                &trans                              &trans                              &kp LEFT_ALT                          &trans      &trans         &trans
            >;
        };

        tri_layer {
            display-name = "Function";
            bindings = <
&kp LEFT_ALT      &kp STAR   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_DIVIDE        &kp F1   &kp F2   &kp F3    &kp F4   &bt BT_SEL 0  &bt BT_SEL 1
&kp LEFT_SHIFT    &kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS            &kp F5   &kp F6   &kp F7    &kp F8   &bt BT_SEL 2  &bt BT_SEL 3
&kp LEFT_CONTROL  &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &HML DOT NUMBER_0    &kp F9   &kp F10  &kp F11   &kp F12  &bt BT_SEL 4  &bt BT_CLR_ALL
                                           &kp LGUI      &trans        &kp SPACE            &kp RET  &trans   &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <4 5>;
            then-layer = <6>;
        };
    };
};
